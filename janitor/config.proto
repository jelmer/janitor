syntax = "proto2";

package janitor;

message Distribution {
  optional string name = 1;

  optional string archive_mirror_uri = 2;

  optional string signed_by = 11;

  // Chroot name to use in sbuild
  optional string chroot = 5;

  repeated string chroot_alias = 12;

  repeated string component = 4;

  optional string lintian_profile = 6;

  repeated string lintian_suppress_tag = 8;

  optional string build_command = 7;

  optional string vendor = 9;

  repeated string extra = 10;
}

message Config {
  // Location to store logs. Can either be a filesystem path or a http
  // location, for use with GCS or S3.
  optional string logs_location = 2;

  // postgresql URL for database connection
  optional string database_location = 4;

  // Default committer to use when committing changes.
  optional string committer = 5;

  repeated Distribution distribution = 7;

  // Origin in published archives
  optional string origin = 8;

  optional OAuth2Provider oauth2_provider = 9;

  // Location to store build results
  optional string artifact_location = 10;

  // Location for zipkin server
  optional string zipkin_address = 12;

  repeated Campaign campaign = 13;

  // Location of git storage
  optional string git_location = 14;

  // Location of bzr storage
  optional string bzr_location = 15;

  // Location of the redis server
  optional string redis_location = 16;

  // User agent string
  optional string user_agent = 18;

  repeated BugTracker bugtracker = 17;

  repeated AptRepository apt_repository = 19;
}

message Env {
  optional string key = 1;
  optional string value = 2;
};

message MergeProposalConfig {
   optional int32 value_threshold = 1;

   optional string commit_message = 2;

   optional string title = 3;

   repeated string label = 4;
};

message Campaign {
  // Name of the campaign. E.g. "lintian-fixes"
  optional string name = 1;

  // VCS branch name to use
  optional string branch_name = 2;

  optional MergeProposalConfig merge_proposal = 5;

  // Force building even if the command did not make any changes.
  optional bool force_build = 6 [default=false];

  optional bool skip_setup_validation = 10 [default=false];

  optional bool default_empty = 11 [default=false];

  oneof build {
    DebianBuild debian_build = 3;
    GenericBuild generic_build = 4;
  }

  repeated BugTracker bugtracker = 8;

  // Default command, can be overridden on a per-package basis
  optional string command = 9;
}

message GenericBuild {
  optional string chroot = 1;
}

message DebianBuild {
  // Extra distributions to pull in packages from when building
  repeated string extra_build_distribution = 1;

  optional string base_distribution = 3;

  // Optional chroot, if different from that of base_distribution
  optional string chroot = 4;

  // Distribution to target when building
  optional string build_distribution = 6;

  // Suffix to add to version in changelog on build.
  optional string build_suffix = 7;

  optional string build_command = 8;
};

message OAuth2Provider {
  optional string client_id = 1;

  optional string client_secret = 2;

  // A URL such as https://salsa.debian.org/
  // Used for finding e.g. token and authorize URLs
  optional string base_url = 3;

  // Name of the OpenID group for QA reviewers
  optional string qa_reviewer_group = 4;

  // Name of the OpenID group for admins
  optional string admin_group = 5;
};

enum BugTrackerKind {
   gitlab = 1;
   debian = 2;
   github = 3;
};

message BugTracker {
   optional BugTrackerKind kind = 1;

   // URL to the project in the bugtracker
   optional string url = 2;

   optional string name = 3;
};

message Select {
    optional string campaign = 1;
};

message AptRepository {
    optional string name = 1;
    optional string base = 3;
    repeated Select select = 2;

    // Human-readable description of the archive. Used in e.g. apt Release file.
    optional string description = 5;
};
