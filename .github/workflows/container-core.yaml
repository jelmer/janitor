---
name: Build and Publish Most Container Images

on:
  # run it on push to the default repository branch
  push:
    branches:
      - main
  pull_request:
  schedule:
    - cron: '0 6 * * *'  # Daily 6AM UTC build

jobs:
  # define job to build and publish container image
  build-and-push-container-image:
    name: Build container image and push to repositories
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-latest

    # steps to perform in job
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: 'true'

      - name: Determine tags to set (pull_request)
        run: |
          echo "TAGS=${{ github.sha }}" >> $GITHUB_ENV
        if: ${{ github.event_name == 'pull_request' }}

      - name: Determine tags to set (push)
        run: |
          echo "TAGS=${{ github.sha }} ${{ github.ref_name }}" >> $GITHUB_ENV
        if: ${{ github.event_name == 'push' }}

      - name: Login to Github Packages
        uses: redhat-actions/podman-login@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build base image
        id: build-image-base
        uses: redhat-actions/buildah-build@v2
        with:
          image: ghcr.io/jelmer/janitor/base
          containerfiles: "Dockerfile_base"
          tags: ${{ env.TAGS }}

      - name: Build runner image
        id: build-image-runner
        uses: redhat-actions/buildah-build@v2
        with:
          containerfiles: "Dockerfile_runner"
          image: ghcr.io/jelmer/janitor/runner
          tags: ${{ env.TAGS }}
          build-args: |
            BASE_TAG=${{ github.sha }}

      - name: Build archive image
        id: build-image-archive
        uses: redhat-actions/buildah-build@v2
        with:
          containerfiles: "Dockerfile_archive"
          image: ghcr.io/jelmer/janitor/archive
          tags: ${{ env.TAGS }}
          build-args: |
            BASE_TAG=${{ github.sha }}

      - name: Build publish image
        id: build-image-publish
        uses: redhat-actions/buildah-build@v2
        with:
          containerfiles: "Dockerfile_publish"
          image: ghcr.io/jelmer/janitor/publish
          tags: ${{ env.TAGS }}
          build-args: |
            BASE_TAG=${{ github.sha }}

      - name: Build git_store image
        id: build-image-git-store
        uses: redhat-actions/buildah-build@v2
        with:
          containerfiles: "Dockerfile_git_store"
          image: ghcr.io/jelmer/janitor/git_store
          tags: ${{ env.TAGS }}
          build-args: |
            BASE_TAG=${{ github.sha }}

      - name: Build bzr_store image
        id: build-image-bzr-store
        uses: redhat-actions/buildah-build@v2
        with:
          containerfiles: "Dockerfile_bzr_store"
          image: ghcr.io/jelmer/janitor/bzr_store
          tags: ${{ env.TAGS }}
          build-args: |
            BASE_TAG=${{ github.sha }}

      - name: Build differ image
        id: build-image-differ
        uses: redhat-actions/buildah-build@v2
        with:
          containerfiles: "Dockerfile_differ"
          image: ghcr.io/jelmer/janitor/differ
          tags: ${{ env.TAGS }}
          build-args: |
            BASE_TAG=${{ github.sha }}

      - name: Push base image to ghcr.io
        if: ${{ github.event_name != 'pull_request' }}
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image-base.outputs.image }}
          tags: ${{ steps.build-image-base.outputs.tags }}
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push runner image to ghcr.io
        if: ${{ github.event_name != 'pull_request' }}
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image-runner.outputs.image }}
          tags: ${{ steps.build-image-runner.outputs.tags }}
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push differ image to ghcr.io
        if: ${{ github.event_name != 'pull_request' }}
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image-differ.outputs.image }}
          tags: ${{ steps.build-image-differ.outputs.tags }}
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push bzr-store image to ghcr.io
        if: ${{ github.event_name != 'pull_request' }}
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image-bzr-store.outputs.image }}
          tags: ${{ steps.build-image-bzr-store.outputs.tags }}
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push git-store image to ghcr.io
        if: ${{ github.event_name != 'pull_request' }}
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image-git-store.outputs.image }}
          tags: ${{ steps.build-image-git-store.outputs.tags }}
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push archive image to ghcr.io
        if: ${{ github.event_name != 'pull_request' }}
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image-archive.outputs.image }}
          tags: ${{ steps.build-image-archive.outputs.tags }}
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push publish image to ghcr.io
        if: ${{ github.event_name != 'pull_request' }}
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image-publish.outputs.image }}
          tags: ${{ steps.build-image-publish.outputs.tags }}
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
